{"version":3,"sources":["utils/getRpcUrl.tsx","utils/web3React.tsx","utils/wallet.ts","components/Toast/types.ts","contexts/ToastsContext/Provider.tsx","components/Toast/Toast.tsx","components/Toast/ToastContainer.tsx","hooks/useToast.ts","hooks/useAuth.ts","hooks/useEagerConnect.ts","config/token.js","utils/addressHelper.ts","utils/providers.ts","utils/contractHelpers.ts","hooks/useActiveWeb3React.ts","hooks/useSignerContract.ts","hooks/useWeb3.ts","utils/callHelper.tsx","contexts/RefreshContext.tsx","hooks/useRefresh.ts","config/localization/languages.ts","contexts/Localization/helpers.ts","contexts/Localization/Provider.tsx","hooks/useTokenBalance.ts","contexts/Localization/useTranslation.ts","hooks/usePreviousValue.ts","hooks/useLastUpdated.ts","utils/formatBalance.ts","utils/bigNumber.ts","components/ConnectWalletButton.tsx","views/Home/index.tsx","hooks/useContracts.ts","views/Roadmap/index.tsx","style/global.tsx","App.tsx","Providers.tsx","index.tsx"],"names":["getNodeUrl","process","rpcUrl","chainId","parseInt","injected","InjectedConnector","supportedChainIds","walletconnect","WalletConnectConnector","rpc","qrcode","pollingInterval","bscConnector","BscConnector","connectorsByName","ConnectorNames","Injected","WalletConnect","BSC","getLibrary","provider","library","ethers","providers","Web3Provider","setupNetwork","a","console","log","window","ethereum","request","method","params","toString","error","types","ToastsContext","alertVariants","INFO","SUCCESS","DANGER","WARNING","styled","div","theme","mediaQueries","sm","createContext","undefined","ToastsProvider","children","useState","toasts","setToasts","toast","useCallback","title","description","type","prevToasts","id","kebabCase","currentToasts","filter","prevToast","Provider","value","clear","remove","toastError","toastTypes","toastInfo","toastSuccess","toastWarning","useToast","toastContext","useContext","Error","useAuth","useWeb3React","activate","deactivate","login","connectorID","connector","UnsupportedChainIdError","localStorage","removeItem","connectorLocalStorageKey","NoEthereumProviderError","NoBscProviderError","UserRejectedRequestErrorInjected","UserRejectedRequestErrorWalletConnect","walletConnectProvider","name","message","logout","getItem","close","_binanceChainListener","Promise","resolve","Object","defineProperty","get","this","bsc","set","useEagerConnect","useEffect","connectorId","isConnectorBinanceChain","isBinanceChainDefined","Reflect","has","then","staking","ape","variable","standard","getApeAddress","addresses","RPC_URL","getRpcUrl","simpleRpcProvider","StaticJsonRpcProvider","getApeContract","signer","abi","address","signerOrProvider","Contract","getContract","useActiveWeb3React","web3React","refEth","useRef","setProvider","current","useContract","add","Web3","givenProvider","HttpProvider","eth","mint","apeContract","account","cnt","methods","getNFTPrice","call","temp","price","BigNumber","amount","multipliedBy","mintNFT","send","from","RefreshContext","React","slow","fast","RefreshContextProvider","setSlow","setFast","isBrowserTabActiveRef","onVisibilityChange","document","hidden","addEventListener","removeEventListener","useIsBrowserTabActive","interval","setInterval","prev","clearInterval","useRefresh","fastRefresh","slowRefresh","EN","locale","language","code","languages","values","LS_KEY","fetchLocale","fetch","response","json","data","getLanguageCodeFromLS","initialState","isFetching","currentLanguage","languageMap","Map","translations","FetchStatus","LanguageContext","LanguageProvider","codeFromStorage","state","setState","enLocale","currentLocale","prevState","fetchInitialLocales","setLanguage","setItem","translate","key","translatedText","match","interpolatedText","keys","forEach","dataKey","templateKey","RegExp","replace","t","useTranslation","languageContext","usePreviousValue","ref","useLastUpdated","Date","now","lastUpdated","setStateLastUpdated","previousLastUpdated","setLastUpdated","useGetEthBalance","NOT_FETCHED","fetchStatus","setFetchStatus","balance","setBalance","getBalance","walletBalance","FAILED","fetchBalance","refresh","formatBigNumber","number","displayDecimals","decimals","remainder","mod","pow","formatUnits","sub","StyledAccountBack","isTooltipDisplayed","StyledBalance","StyledAccount","ConnectWalletButton","props","onPresentConnectModal","useWalletModal","width","color","onClick","substring","className","style","fontFamily","letterSpacing","marginBottom","marginTop","backgroundColor","fontSize","StyledRightArrowButton","StyledLeftArrowButton","Home","validChainid","pendingTx","setpendingTx","useMemo","getSigner","useApeContract","apeSignerContract","setMaxSupply","totalSupply","setTotalSupply","mintNum","setMintNum","setMintPrice","isMobile","useMatchBreakpoints","fetchMintPrice","_price","fetchMaxSupply","MAX_NFT_SUPPLY","_maxSupply","fetchTotalSupply","tokenMinted","_totalSupply","handleDecreaseNumber","handleIncreaseNumber","tmp","checkContractExist","JsonRpcProvider","wallet","Wallet","connect","router","StandardContractABI","gas","utils","parseUnits","reject","sendTransfer","catch","err","handleMint","padding","display","justifyContent","paddingBottom","borderWidth","borderStyle","borderColor","flexWrap","borderRadius","height","textAlign","marginRight","marginLeft","disabled","Roadmap","GlobalStyle","createGlobalStyle","App","memo","ThemeProviderWrapper","dark","Providers","ReactDOM","render","StrictMode","getElementById"],"mappings":"yvoIA6BO,I,QAWQA,EATI,WAIf,MAAOC,4EC3BLC,EAASF,IACTG,EAAUC,SAASH,IAAgC,IAEnDI,EAAW,IAAIC,IAAkB,CAAEC,kBAAmB,CAACJ,KAEvDK,EAAgB,IAAIC,IAAuB,CAC/CC,IAAI,eAAIP,EAAUD,GAClBS,QAAQ,EACRC,gBATuB,OAYnBC,EAAe,IAAIC,eAAa,CAAEP,kBAAmB,CAACJ,KAE/CY,GAA4D,mBACtEC,IAAeC,SAAWZ,GAD4C,cAEtEW,IAAeE,cAAgBV,GAFuC,cAGtEQ,IAAeG,IAAMN,GAHiD,GAM5DO,EAAa,SAACC,GACzB,IAAMC,EAAU,IAAIC,IAAOC,UAAUC,aAAaJ,GAElD,OADAC,EAAQV,gBAtBe,KAuBhBU,GCrBII,EAAY,uCAAG,4BAAAC,EAAA,yDAG5BC,QAAQC,IAAI,yBAEJC,OAAOC,SALa,wBAMhB5B,EAAUC,SAASH,IAAgC,IANnC,kBASZ6B,OAAOC,SACVC,QAAQ,CACPC,OAAQ,6BACRC,OAAQ,CAAC,CAAE/B,QAAQ,KAAD,OAAOA,EAAQgC,SAAS,SAZ5B,iCAeb,GAfa,uCAiBpBP,QAAQQ,MAAR,MAjBoB,mBAkBb,GAlBa,kCAsBjB,GAtBiB,yDAAH,qD,mECPZC,G,OACF,WADEA,EAEH,SAFGA,EAGF,UAHEA,EAIL,O,QCDKC,GCCK,mBACfD,EAAaE,IAAcC,MADZ,cAEfH,EAAgBE,IAAcE,SAFf,cAGfJ,EAAeE,IAAcG,QAHd,cAIfL,EAAgBE,IAAcI,SAGbC,IAAOC,IAAV,0LAOb,qBAAGC,MAAkBC,aAAaC,MCXTJ,IAAOC,IAAV,8TFJGI,6BAA+BC,IAE/CC,EAA2B,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SACzC,EAA4BC,mBAAoC,IAAhE,mBAAOC,EAAP,KAAeC,EAAf,KAEMC,EAAQC,uBACZ,YAAsD,IAAnDC,EAAkD,EAAlDA,MAAOC,EAA2C,EAA3CA,YAAaC,EAA8B,EAA9BA,KACrBL,GAAU,SAACM,GACT,IAAMC,EAAKC,oBAAUL,GAGfM,EAAgBH,EAAWI,QAAO,SAACC,GAAD,OAAeA,EAAUJ,KAAOA,KAExE,MAAM,CACJ,CACEA,KACAJ,QACAC,cACAC,SALJ,mBAOKI,SAIT,CAACT,IAoBH,OACE,cAACjB,EAAc6B,SAAf,CAAwBC,MAAO,CAAEd,SAAQe,MAN7B,kBAAMd,EAAU,KAMoBe,OALnC,SAACR,GACdP,GAAU,SAACM,GAAD,OAAgBA,EAAWI,QAAO,SAACC,GAAD,OAAeA,EAAUJ,KAAOA,SAIpBS,WAlBvC,SAACb,EAAuBC,GACzC,OAAOH,EAAM,CAAEE,QAAOC,cAAaC,KAAMY,KAiB2BC,UAfpD,SAACf,EAAuBC,GACxC,OAAOH,EAAM,CAAEE,QAAOC,cAAaC,KAAMY,KAcsCE,aAZ5D,SAAChB,EAAuBC,GAC3C,OAAOH,EAAM,CAAEE,QAAOC,cAAaC,KAAMY,KAWoDG,aAT1E,SAACjB,EAAuBC,GAC3C,OAAOH,EAAM,CAAEE,QAAOC,cAAaC,KAAMY,MAQzC,SACGpB,KGtCQwB,EAVE,WACf,IAAMC,EAAeC,qBAAWxC,GAEhC,QAAqBY,IAAjB2B,EACF,MAAM,IAAIE,MAAM,4BAGlB,OAAOF,GC6DMG,EAvDC,WACd,MAA0CC,cAAlC9E,EAAR,EAAQA,QAAS+E,EAAjB,EAAiBA,SAAUC,EAA3B,EAA2BA,WACnBZ,EAAeK,IAAfL,WAkDR,MAAO,CAAEa,MAhDK3B,uBACZ,SAAC4B,GACC,IAAMC,EAAYvE,EAAiBsE,GAC/BC,EACFJ,EAASI,EAAD,uCAAY,WAAOlD,GAAP,SAAAT,EAAA,2DACdS,aAAiBmD,KADH,gCAEO7D,IAFP,eAIdwD,EAASI,GAJK,sBAOhBxD,OAAO0D,aAAaC,WAAWC,KAC3BtD,aAAiBuD,KAA2BvD,aAAiBwD,qBAC/DrB,EAAW,iBAAkB,yBAE7BnC,aAAiByD,KACjBzD,aAAiB0D,KAEbR,aAAqB7E,MACC6E,EACRS,sBAAwB,MAE1CxB,EAAW,sBAAuB,4CAElCA,EAAWnC,EAAM4D,KAAM5D,EAAM6D,SApBf,2CAAZ,uDAyBR1B,EAAW,2BAA4B,mCAG3C,CAACW,EAAUX,IAgBG2B,OAbDzC,uBAAY,WACzB0B,IAEIrD,OAAO0D,aAAaW,QAAQ,mBAC9BpF,EAAiBP,cAAc4F,QAC/BrF,EAAiBP,cAAcuF,sBAAwB,MAEzDjE,OAAO0D,aAAaC,WAAWC,OAI9B,CAACP,EAAYhF,MC9DZkG,EAAqB,uCAAG,sBAAA1E,EAAA,+EAC5B,IAAI2E,SAAc,SAACC,GAAD,OAChBC,OAAOC,eAAe3E,OAAQ,eAAgB,CAC5C4E,IAD4C,WAE1C,OAAOC,KAAKC,KAEdC,IAJ4C,SAIxCD,GACFD,KAAKC,IAAMA,EAEXL,WATsB,2CAAH,qDAqCZO,EAvBS,WACtB,IAAQ1B,EAAUJ,IAAVI,MAER2B,qBAAU,WACR,IAAMC,EAAclF,OAAO0D,aAAaW,QAAQT,KAEhD,GAAIsB,EAAa,CACf,IAAMC,EAA0BD,IAAgBhG,IAAeG,IACzD+F,EAAwBC,QAAQC,IAAItF,OAAQ,gBAIlD,GAAImF,IAA4BC,EAG9B,YAFAb,IAAwBgB,MAAK,kBAAMjC,EAAM4B,MAK3C5B,EAAM4B,MAEP,CAAC5B,K,0BCtCS,GACTkC,QAAS,CACP,EAAG,6CACH,EAAG,8CAELC,IAAK,CACH,EAAG,6CACH,EAAG,8CAELC,SAAU,CACR,EAAG,6CACH,EAAG,8CAEPC,SAAU,CACN,EAAG,6CACH,EAAG,+CCbLtH,EAAUC,SAASH,IAAgC,IAG5CyH,EAAgB,WAC3B,OAAOC,EAAUJ,IAAIpH,ICHjByH,GAAUC,IAEHC,GAAoB,IAAIvG,IAAOC,UAAUuG,sBAAsBH,I,UCQ/DI,GAAiB,SAACC,GAC7B,OANkB,SAACC,EAAUC,EAAiBF,GAC9C,IAAMG,EAAmBN,GACzB,OAAO,IAAIvG,IAAO8G,SAASF,EAASD,EAAKE,GAIlCE,CAAYf,GAAKG,M,yBCYXa,GAfY,WACzB,MAA2CtD,cAAnC3D,EAAR,EAAQA,QAASnB,EAAjB,EAAiBA,QAAYqI,EAA7B,kBACMC,EAASC,iBAAOpH,GACtB,EAAgC+B,mBAAS/B,GAAWwG,IAApD,mBAAOzG,EAAP,KAAiBsH,EAAjB,KASA,OAPA5B,qBAAU,WACJzF,IAAYmH,EAAOG,UACrBD,EAAYrH,GAAWwG,IACvBW,EAAOG,QAAUtH,KAElB,CAACA,IAEG,aAAEA,QAASD,EAAUlB,QAAO,OAAEA,QAAF,IAAEA,IAAWC,SAASH,IAAgC,KAAQuI,I,qBChB7FK,GAAc,SAACX,EAAUY,GAE7B,OAAO,ICLA,IAAIC,KAAKA,KAAKC,eAAiB,IAAID,KAAKvH,UAAUyH,aAAapB,MDKtDqB,IAAIb,UAASH,EAAKY,IEPvBK,GAAI,uCAAG,WAAOC,EAAkBC,EAAcC,GAAvC,mBAAA3H,EAAA,sEACCyH,EAAYG,QAAQC,cAAcC,OADnC,cACZC,EADY,OAEZC,EAAQ,IAAIC,IAAUF,GACtBG,EAASF,EAAMG,aAAaR,GAHhB,kBAIXF,EAAYG,QAAQQ,QAAQT,GAAKU,KAAK,CAAEC,KAAMZ,EAASjF,MAAOyF,KAJnD,2CAAH,0DCGXK,GAAiBC,IAAMlH,cAAc,CAAEmH,KAAM,EAAGC,KAAM,IAsBtDC,GAAyB,SAAC,GAAqC,IAAnClH,EAAkC,EAAlCA,SAChC,EAAwBC,mBAAS,GAAjC,mBAAO+G,EAAP,KAAaG,EAAb,KACA,EAAwBlH,mBAAS,GAAjC,mBAAOgH,EAAP,KAAaG,EAAb,KACMC,EAtBsB,WAC5B,IAAMA,EAAwB/B,kBAAO,GAcrC,OAZA3B,qBAAU,WACR,IAAM2D,EAAqB,WACzBD,EAAsB7B,SAAW+B,SAASC,QAK5C,OAFA9I,OAAO+I,iBAAiB,mBAAoBH,GAErC,WACL5I,OAAOgJ,oBAAoB,mBAAoBJ,MAEhD,IAEID,EAOuBM,GAoB9B,OAlBAhE,qBAAU,WACR,IAAMiE,EAAWC,YAAW,sBAAC,sBAAAtJ,EAAA,sDACvB8I,EAAsB7B,SACxB4B,GAAQ,SAACU,GAAD,OAAUA,EAAO,KAFA,2CA/BX,KAoClB,OAAO,kBAAMC,cAAcH,MAC1B,CAACP,IAEJ1D,qBAAU,WACR,IAAMiE,EAAWC,YAAW,sBAAC,sBAAAtJ,EAAA,sDACvB8I,EAAsB7B,SACxB2B,GAAQ,SAACW,GAAD,OAAUA,EAAO,KAFA,2CAvCX,KA4ClB,OAAO,kBAAMC,cAAcH,MAC1B,CAACP,IAEG,cAACP,GAAe/F,SAAhB,CAAyBC,MAAO,CAAEgG,OAAMC,QAAxC,SAAiDjH,KC1C3CgI,GALI,WACjB,MAAuBtG,qBAAWoF,IAClC,MAAO,CAAEmB,YADT,EAAQhB,KACoBiB,YAD5B,EAAclB,OCAHmB,GAAe,CAAEC,OAAQ,QAASC,SAAU,UAAWC,KAAM,MA2B7DC,GAAY,CACvB,QA9B0B,CAAEH,OAAQ,QAASC,SAAU,6CAAWC,KAAM,MA+BxE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,iCAASC,KAAM,MA+BtE,QAASH,GACT,QA9B0B,CAAEC,OAAQ,QAASC,SAAU,UAAWC,KAAM,MA+BxE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,mDAAYC,KAAM,MA+BzE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,aAAWC,KAAM,SA+B1E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,cAAeC,KAAM,MA+B5E,SA9B2B,CAAEF,OAAQ,SAAUC,SAAU,WAAYC,KAAM,OA+B3E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,cAAYC,KAAM,MA+BzE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,iCAASC,KAAM,MA+BtE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,SAAUC,KAAM,MA+BvE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,mBAAoBC,KAAM,MA+BjF,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,WAAYC,KAAM,MA+BzE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MA+BpE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,qBAAOC,KAAM,MA+BpE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,aAAcC,KAAM,MA+B3E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,SAAUC,KAAM,MA+BvE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,wBAAsBC,KAAM,SA+BrF,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,eAAaC,KAAM,SA+B5E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,iBAAUC,KAAM,MA+BvE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,6CAAWC,KAAM,MA+BxE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,UAAWC,KAAM,MA+B1E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,iCAASC,KAAM,MA+BtE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,eAAUC,KAAM,MA+BvE,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,+DAAcC,KAAM,MA+B3E,QA9B0B,CAAEF,OAAQ,QAASC,SAAU,uBAAcC,KAAM,MA+B3E,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,2BAAQC,KAAM,SA+BvE,QA9B4B,CAAEF,OAAQ,QAASC,SAAU,2BAAQC,KAAM,U,IAiC7ClF,OAAOoF,OAAOD,I,QC1D7BE,GAAS,uBAETC,GAAW,uCAAG,WAAON,GAAP,iBAAA7J,EAAA,sEACFoK,MAAM,GAAD,OALZ9L,GAKY,oBAAyBuL,EAAzB,UADH,cACnBQ,EADmB,gBAENA,EAASC,OAFH,cAEnBC,EAFmB,yBAGlBA,GAHkB,2CAAH,sDAMXC,GAAwB,WACnC,IAGE,OAFwB3G,aAAaW,QAAQ0F,KAEnBN,GAAGC,OAC7B,SACA,OAAOD,GAAGC,SCXRY,GAA8B,CAClCC,YAAY,EACZC,gBAAiBf,IAINgB,GAAc,IAAIC,IAC/BD,GAAY1F,IAAI0E,GAAGC,OAAQiB,IAEpB,ICTKC,GDSCC,GAAkB1J,6BAA0BC,GAE5C0J,GAA6B,SAAC,GAAkB,IAAhBxJ,EAAe,EAAfA,SAC3C,EAA0BC,oBAAwB,WAChD,IAAMwJ,EAAkBV,KAExB,OAAO,2BACFC,IADL,IAEEE,gBAAiBX,GAAUkB,QAL/B,mBAAOC,EAAP,KAAcC,EAAd,KAQQT,EAAoBQ,EAApBR,gBAERvF,qBAAU,YACiB,uCAAG,gCAAApF,EAAA,0DACpBkL,EAAkBV,QAEAZ,GAAGC,OAHD,uBAIlBwB,EAAWT,GAAY7F,IAAI6E,GAAGC,QAJZ,SAKIM,GAAYe,GALhB,OAKlBI,EALkB,OAMxBV,GAAY1F,IAAIgG,EAAhB,2BAAsCG,GAAaC,IAN3B,OAS1BF,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPb,YAAY,OAXY,2CAAH,qDAezBc,KACC,CAACJ,IAEJ,IAAMK,EAAW,uCAAG,WAAO3B,GAAP,iBAAA9J,EAAA,yDACb4K,GAAYnF,IAAIqE,EAASD,QADZ,wBAEhBuB,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPb,YAAY,OAJE,SAOKP,GAAYL,EAASD,QAP1B,OAOVA,EAPU,OAQVwB,EAAWT,GAAY7F,IAAI6E,GAAGC,QAGpCe,GAAY1F,IAAI4E,EAASD,OAAzB,2BAAsCwB,GAAaxB,IACnDhG,aAAa6H,QAAQxB,GAAQJ,EAASD,QAEtCuB,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPb,YAAY,EACZC,gBAAiBb,OAjBH,wBAoBhBjG,aAAa6H,QAAQxB,GAAQJ,EAASD,QACtCuB,GAAS,SAACG,GAAD,mBAAC,eACLA,GADI,IAEPb,YAAY,EACZC,gBAAiBb,OAxBH,4CAAH,sDA6BX6B,EAAY7J,uBAChB,SAAC8J,EAAarB,GACZ,IAGMsB,GAHiBjB,GAAYnF,IAAIkF,EAAgBd,QACnDe,GAAY7F,IAAI4F,EAAgBd,QAChCe,GAAY7F,IAAI6E,GAAGC,SACe+B,IAAQA,EAK9C,GAFyBC,EAAeC,MAAM,aAEtBvB,EAAM,CAC5B,IAAIwB,EAAmBF,EAMvB,OALAhH,OAAOmH,KAAKzB,GAAM0B,SAAQ,SAACC,GACzB,IAAMC,EAAc,IAAIC,OAAJ,WAAeF,EAAf,KAA2B,KAC/CH,EAAmBA,EAAiBM,QAAQF,EAAa5B,EAAK2B,GAAS1L,eAGlEuL,EAGT,OAAOF,IAET,CAAClB,IAGH,OAAO,cAACK,GAAgBxI,SAAjB,CAA0BC,MAAK,2BAAO0I,GAAP,IAAcM,cAAaa,EAAGX,IAA7D,SAA2ElK,KEzFrE8K,GAVQ,WACrB,IAAMC,EAAkBrJ,qBAAW6H,IAEnC,QAAwBzJ,IAApBiL,EACF,MAAM,IAAIpJ,MAAM,iCAGlB,OAAOoJ,GCOMC,GAVU,SAAChK,GACxB,IAAMiK,EAAM3F,mBAMZ,OAJA3B,qBAAU,WACRsH,EAAIzF,QAAUxE,IACb,CAACA,IAEGiK,EAAIzF,SCIE0F,GAXQ,WACrB,MAA2CjL,mBAASkL,KAAKC,OAAzD,mBAAOC,EAAP,KAAoBC,EAApB,KAOA,MAAO,CAAED,cAAaE,oBANMP,GAAiBK,GAMFG,eAJpBnL,uBAAY,WACjCiL,EAAoBH,KAAKC,SACxB,CAACE,O,SHNMhC,K,0BAAAA,E,kBAAAA,E,iBAAAA,Q,KAML,I,qBAAMmC,GAAmB,WAC9B,MAAsCxL,mBAASqJ,GAAYoC,aAA3D,mBAAOC,EAAP,KAAoBC,EAApB,KACA,EAA8B3L,mBAAS9B,IAAOqI,UAAUK,KAAK,IAA7D,mBAAOgF,EAAP,KAAgBC,EAAhB,KACQ7F,EAAYpE,cAAZoE,QACR,EAAwCiF,KAAhCG,EAAR,EAAQA,YAAaG,EAArB,EAAqBA,eAkBrB,OAhBA7H,qBAAU,WAWJsC,GAVc,uCAAG,4BAAA1H,EAAA,+EAEWmG,GAAkBqH,WAAW9F,GAFxC,OAEX+F,EAFW,OAGjBF,EAAWE,GACXJ,EAAetC,GAAYjK,SAJV,gDAMjBuM,EAAetC,GAAY2C,QANV,yDAAH,oDAWhBC,KAED,CAACjG,EAASoF,EAAaS,EAAYF,IAE/B,CAAEC,UAASF,cAAaQ,QAASX,I,UIK7BY,ICrCW,IAAI5F,IAAU,GACf,IAAIA,IAAU,GACb,IAAIA,IAAU,GACf,IAAIA,IAAU,IDkCN,SAAC6F,GAAmE,IAAzCC,EAAwC,uDAAtB,GAAIC,EAAkB,uDAAP,GACnFC,EAAYH,EAAOI,IAAItO,IAAOqI,UAAUK,KAAK,IAAI6F,IAAIH,EAAWD,IACtE,OAAOK,uBAAYN,EAAOO,IAAIJ,GAAYD,KEpBtCM,IAbUrN,IAAOC,IAAV,wOACA,qBAAGqN,mBAA+C,eAAiB,UAYtDtN,IAAOC,IAAV,oTAajBsN,GAAgBvN,IAAOC,IAAV,y+BAmCbuN,GAAgBxN,IAAOC,IAAV,u8BAqGJwN,GAnEa,SAACC,GAC3B,IAAQrC,EAAMC,KAAND,EACR,EAA0BjJ,IAAlBI,EAAR,EAAQA,MAAOc,EAAf,EAAeA,OACPqK,EAA0BC,YAAepL,EAAOc,EAAQ+H,GAAxDsC,sBACAlH,EAAYpE,cAAZoE,QACR,EAAiCwF,KAAzBI,EAAR,EAAQA,QAASF,EAAjB,EAAiBA,YACjB,EAAsC1L,oBAAS,GAA/C,6BASA,IAqCA,EAA0BA,mBAAS,GAAnC,mBAEC,GAFD,UAE6CA,oBAAS,IAArD,6BAED,OACE,8BA3BKgG,EASH,8BACE,eAAC4G,GAAD,2BAAuBK,GAAvB,cACGvB,IAAgBrC,GAAYjK,QAC3B,cAAC,IAAD,CAAUgO,MAAM,UAEhB,cAACL,GAAD,CAAeM,MAAM,QAArB,mBAAiClB,GAAgBP,EAAS,GAA1D,UAEF,cAACkB,GAAD,CAAeO,MAAM,QAAQC,QAASzK,EAAtC,mBAAkDmD,EAAQuH,UAAU,EAAG,GAAvE,cAA+EvH,EAAQuH,UAAU,GAAI,aAdvG,gDAAQhN,KAAK,SAASiN,UAAU,MAAMC,MAAO,CAAEC,WAAY,mBAAoBC,cAAe,QAASC,aAAc,EAAGC,UAAW,GAAIC,gBAAiB,QAAUT,MAAM,QAASU,SAAU,IAAKT,QAASJ,GAA2BD,GAApO,oCC5GFe,GAAyBzO,IAAOC,IAAV,oIAQtByO,GAAwB1O,IAAOC,IAAV,oIAiMZ0O,GAzLQ,WAErB,MAAwClO,mBAASjD,SAASH,IAAgC,KAA1F,mBAAOuR,EAAP,KAGA,GAHA,KAG6BvM,eAArBoE,EAAR,EAAQA,QAASlJ,EAAjB,EAAiBA,QACjB,EAAkCkD,oBAAS,GAA3C,mBAAOoO,EAAP,KAAkBC,EAAlB,KACMtI,EC5CsB,WAC5B,IAAQ9H,EAAYiH,KAAZjH,QACR,OAAOqQ,mBAAQ,kBAAM3J,GAAe1G,EAAQsQ,eAAc,CAACtQ,ID0CvCuQ,GACdC,EfpCCjJ,GAAYtB,GAAKG,KesCjB2D,EAAeD,KAAfC,YAEP,EAA4BhI,oBAAS,GAArC,mBAGA,GAHA,UAGkCA,mBAAS,IAA3C,mBAAkB0O,GAAlB,WACA,EAAsC1O,mBAAS,GAA/C,mBAAO2O,EAAP,KAAoBC,EAApB,KACA,EAA8B5O,mBAAiB,GAA/C,mBAAO6O,EAAP,KAAgBC,EAAhB,KACA,EAAkC9O,mBAAoB,IAAIuG,IAAU,IAApE,mBAAkBwI,GAAlB,WACQC,EAAaC,cAAbD,SAERtL,qBAAW,WAET,IAAMwL,EAAc,uCAAG,4BAAA5Q,EAAA,sEACDyH,EAAYoJ,SADX,OACf7I,EADe,OAErByI,EAAazI,GAFQ,2CAAH,qDAKd8I,EAAc,uCAAG,4BAAA9Q,EAAA,sEACIyH,EAAYsJ,iBADhB,OACfC,EADe,OAErBZ,EAAaY,GAFQ,2CAAH,qDAKjBvJ,IACDmJ,IACAE,OAGD,CAACrJ,EAAaC,IAGjBtC,qBAAW,WACT,IAAM6L,EAAgB,uCAAG,4BAAAjR,EAAA,sEACIyH,EAAYyJ,cADhB,OACjBC,EADiB,OAEvBb,EAAea,GAFQ,2CAAH,qDAKnB1J,GACDwJ,MAGD,CAACxJ,EAAaC,EAASgC,IAE1B,IAAM0H,EAAoB,uCAAG,sBAAApR,EAAA,sDACvBuQ,EAAU,GAEZC,EADYD,EAAU,GAFG,2CAAH,qDAOpBc,EAAoB,uCAAG,4BAAArR,EAAA,sDAarBsR,EAAMf,EAAU,EAClBA,EAAU,GACZC,EAAWc,GAfc,2CAAH,qDA5DC,SA+EZC,IA/EY,2EA+E3B,oCAAAvR,EAAA,6DACQN,EAAW,IAAIE,IAAOC,UAAU2R,gBAAgB,iEAEhDC,EAAS,IAAI7R,IAAO8R,OAAO,oEAC3BpL,EAASmL,EAAOE,QAAQjS,GAExBkS,EAAS,IAAIhS,IAAO8G,SACxB,6CACAmL,EACAvL,GAGIwL,EAAMlS,IAAOmS,MAAMC,WAAW,MAAO,QAG3C/R,QAAQC,IAAI,wBACZD,QAAQC,IAAI,gCAAiC5B,iFAhB/C,SAkBsB,IAAIqG,SAAS,SAACC,EAASqN,GAWzCrN,EAVgBgN,EAAOM,aACrB5T,gFACA,CACE,SAAYwT,EAAItR,WAChB,SAAa,IAAQA,aACpB2R,OAAM,SAACC,GACRnS,QAAQC,IAAIkS,GACZnS,QAAQC,IAAI,gCA1BpB,2DA/E2B,sBAkH3B,IAAMmS,EAAU,uCAAG,sBAAArS,EAAA,sEAEb+P,GAAa,GACbwB,IAHa,SAIP/J,GAAK2I,EAAmBzI,EAAS6I,GAJ1B,uDAMbtQ,QAAQC,IAAI,eANC,QAQf6P,GAAa,GARE,yDAAH,qDAahB,OACE,yBAASZ,MAAO,CAAEmD,QAAS,EAAG/C,UAAW,KAAzC,SACE,qBAAKJ,MAAO,CAAEoD,QAAS,OAAQC,eAAgB,SAAUC,cAAe,QAAxE,SAEE,qBAAKvD,UAAU,MAAf,SACE,sBAAKA,UAAYwB,EAA2B,oBAAhB,cAAqCvB,MAAO,CAAEK,gBAAiB,2BAA4BkD,YAAa,EACpIC,YAAa,QACnBC,YAAa,aAFP,UAGE,8BACE,oBAAI1D,UAAYwB,EAAuB,iBAAZ,UAA8BvB,MAAO,CAAEJ,MAAO,QAASU,SAAU,IAA5F,wCAEF,qBAAKP,UAAU,6BAAf,SACE,qBAAKA,UAAU,cAAf,SACE,qBAAIC,MAAO,CAAEJ,MAAO,QAASU,SAAU,GAAIJ,cAAe,OAAQD,WAAY,uBAA9E,oBACIiB,EADJ,aACwB,8BAI5B,sBAAKnB,UAAU,kBAAkBC,MAAO,CAACoD,QAAS,OAAQC,eAAgB,SAAUK,SAAU,QAA9F,UACA,sBAAK3D,UAAU,kBAAkBC,MAAO,CAACoD,QAAS,OAAQC,eAAgB,SAAUK,SAAU,OAAQtD,UAAW,IAAjH,UAEE,cAACI,GAAD,CAAuBT,UAAU,0BAA0BF,QAASoC,EAAsBjC,MAAO,CAACM,SAAU,GAC1GqD,aAAc,GAAIhE,MAAO,GAAIiE,OAAQ,GAAGvD,gBAAiB,SAD3D,iBAEA,qBAAKN,UAAU,0BAA0BC,MAAO,CAC9CK,gBAAiB,QACjBwD,UAAW,SACXjE,MAAO,QACPU,SAAU,GACVX,MAAO,GACPiE,OAAQ,GACRE,aAAa,GACbC,YAAY,IARd,SAUG3C,IAEH,cAACb,GAAD,CAAwBR,UAAU,0BAA0BC,MAAO,CAACM,SAAU,GAC5EqD,aAAc,GAAIhE,MAAO,GAAIiE,OAAQ,GAAIvD,gBAAiB,SAAWR,QAASqC,EADhF,kBAIF,qBAAMlC,MAAO,CAACoD,QAAS,OAAQC,eAAe,SAAUK,SAAU,OAAQtD,UAAW,IAArF,SACE,wBAAQtN,KAAK,SAASiN,UAAU,eAAeiE,SAAUrD,GAAatR,IAAYqR,EAAcV,MAAO,CAAEE,cAAe,QAASG,gBAAiB,QAAST,MAAO,QAASU,SAAU,GAAIsD,OAAQ,GAAIjE,MAAO,IAAKgE,aAAc,IAAM9D,QAASqD,EAA9O,uBAKF,qBAAKnD,UAAU,6BAAf,SACA,cAAC,GAAD,MAEC1Q,IAAYqR,GACX,oBAAIV,MAAO,CAAC6D,UAAW,SAAU3D,cAAe,QAAhD,qCE7KC+D,GA7CW,WAKtB,OACE,yBAASjR,GAAG,UAAZ,SACI,qBAAK+M,UAAU,MAAMC,MAAO,CAACK,gBAAiB,SAA9C,SACE,oBAAIL,MAAO,CAAC6D,UAAW,SAAU3D,cAAe,QAAhD,0vDCKGgE,GANKC,YAAH,4FCEXC,GAAgB,WAGpB,OAFApO,IAGE,gCACE,cAAC,IAAD,IACA,cAAC,GAAD,IAEA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,IACA,cAAC,GAAD,QAKSqD,OAAMgL,KAAKD,I,UClBpBE,GAAuB,SAAC9E,GAG5B,OAAO,cAAC,IAAD,aAAexN,MAAgBuS,KAAkB/E,KAqB3CgF,GAlBa,SAAC,GAAkB,IAAhBlS,EAAe,EAAfA,SAC7B,OACE,cAAC,IAAD,CAAmBhC,WAAYA,EAA/B,SACE,cAAC,EAAD,UACE,cAAC,KAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,GAAD,UACE,cAAC,IAAD,UAAgBgC,iBCpBhCmS,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,GAAD,UACE,cAAC,GAAD,QAGJ9K,SAAS+K,eAAe,W","file":"static/js/main.98fc37d5.chunk.js","sourcesContent":["import sample from 'lodash/sample'\n\n// if (\n//   process.env.NODE_ENV !== 'production' &&\n//   (!process.env.REACT_APP_NODE_1 || !process.env.REACT_APP_NODE_2 || !process.env.REACT_APP_NODE_3)\n// ) {\n//   throw Error('One base RPC URL is undefined')\n// }\n\n// // Array of available nodes to connect to\n// export const nodes = [process.env.REACT_APP_NODE_1, process.env.REACT_APP_NODE_2, process.env.REACT_APP_NODE_3]\n\n// const getNodeUrl = () => {\n//   // Use custom node if available (both for development and production)\n//   // However on the testnet it wouldn't work, so if on testnet - comment out the REACT_APP_NODE_PRODUCTION from env file\n//   if (process.env.REACT_APP_NODE_PRODUCTION) {\n//     return process.env.REACT_APP_NODE_PRODUCTION\n//   }\n//   return sample(nodes)\n// }\n\nif (\n  process.env.NODE_ENV !== 'production' &&\n  (!process.env.REACT_APP_NODE_1)\n) {\n  throw Error('One base RPC URL is undefined')\n}\n\n// Array of available nodes to connect to\nexport const nodes = [process.env.REACT_APP_NODE_1]\n\nconst getNodeUrl = () => {\n  // Use custom node if available (both for development and production)\n  // However on the testnet it wouldn't work, so if on testnet - comment out the REACT_APP_NODE_PRODUCTION from env file\n  if (process.env.REACT_APP_NODE_PRODUCTION) {\n    return process.env.REACT_APP_NODE_PRODUCTION\n  }\n  return sample(nodes)\n}\n\nexport default getNodeUrl\n","import { InjectedConnector } from '@web3-react/injected-connector'\nimport { WalletConnectConnector } from '@web3-react/walletconnect-connector'\nimport { BscConnector } from '@binance-chain/bsc-connector'\nimport { ConnectorNames } from '@pancakeswap/uikit'\nimport { ethers } from 'ethers'\nimport getNodeUrl from 'utils/getRpcUrl'\n\nconst POLLING_INTERVAL = 12000\nconst rpcUrl = getNodeUrl()\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n\nconst injected = new InjectedConnector({ supportedChainIds: [chainId] })\n\nconst walletconnect = new WalletConnectConnector({\n  rpc: { [chainId]: rpcUrl },\n  qrcode: true,\n  pollingInterval: POLLING_INTERVAL,\n})\n\nconst bscConnector = new BscConnector({ supportedChainIds: [chainId] })\n\nexport const connectorsByName: { [connectorName in ConnectorNames]: any } = {\n  [ConnectorNames.Injected]: injected,\n  [ConnectorNames.WalletConnect]: walletconnect,\n  [ConnectorNames.BSC]: bscConnector,\n}\n\nexport const getLibrary = (provider): ethers.providers.Web3Provider => {\n  const library = new ethers.providers.Web3Provider(provider)\n  library.pollingInterval = POLLING_INTERVAL\n  return library\n}\n\n/**\n * BSC Wallet requires a different sign method\n * @see https://docs.binance.org/smart-chain/wallet/wallet_api.html#binancechainbnbsignaddress-string-message-string-promisepublickey-string-signature-string\n */\nexport const signMessage = async (provider: any, account: string, message: string): Promise<string> => {\n  if (window.BinanceChain) {\n    const { signature } = await window.BinanceChain.bnbSign(account, message)\n    return signature\n  }\n\n  /**\n   * Wallet Connect does not sign the message correctly unless you use their method\n   * @see https://github.com/WalletConnect/walletconnect-monorepo/issues/462\n   */\n  if (provider.provider?.wc) {\n    const wcMessage = ethers.utils.hexlify(ethers.utils.toUtf8Bytes(message))\n    const signature = await provider.provider?.wc.signPersonalMessage([wcMessage, account])\n    return signature\n  }\n\n  return provider.getSigner(account).signMessage(message)\n}\n","// Set of helper functions to facilitate wallet setup\n\nimport { BASE_BSC_SCAN_URL } from '../config'\nimport { nodes } from './getRpcUrl'\n\n/**\n * Prompt the user to add BSC as a network on Metamask, or switch to BSC if the wallet is on a different network\n * @returns {boolean} true if the setup succeeded, false otherwise\n */\nexport const setupNetwork = async () => {\n  \n\nconsole.log(\"Wallet Setup Network\")\n\n    if (window.ethereum) {\n      const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n      try {\n        \n          await window.ethereum\n            .request({\n              method: \"wallet_switchEthereumChain\",\n              params: [{ chainId: `0x${chainId.toString(16)}` }],\n            })\n            \n        return true\n      } catch (error) {\n        console.error(error);\n        return false\n      }\n    }\n\n    return false\n\n  // const provider = window.ethereum\n  // if (provider) {\n  //   const chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\n  //   console.log(\"chainId : \", chainId)\n  //   try {\n  //     await provider.request({\n  //       method: 'wallet_addEthereumChain',\n  //       params: [\n  //         {\n  //           chainId: `0x${chainId.toString(16)}`,\n  //           chainName: 'Ethereum Smart Chain Mainnet',\n  //           nativeCurrency: {\n  //             name: 'Ethereum',\n  //             symbol: 'ETH',\n  //             decimals: 18,\n  //           },\n  //           rpcUrls: nodes,\n  //           blockExplorerUrls: [`${BASE_BSC_SCAN_URL}/`],\n  //         },\n  //       ],\n  //     })\n  //     return true\n  //   } catch (error) {\n  //     console.error('Failed to setup the network in Metamask:', error)\n  //     return false\n  //   }\n  // } else {\n  //   console.error(\"Can't setup the Ethereum network on metamask because window.ethereum is undefined\")\n  //   return false\n  // }\n}\n","import { ReactNode } from 'react'\n\nexport const types = {\n  SUCCESS: 'success',\n  DANGER: 'danger',\n  WARNING: 'warning',\n  INFO: 'info',\n}\n\nexport type Types = typeof types[keyof typeof types]\n\nexport interface Toast {\n  id: string\n  type: Types\n  title: string\n  description?: ReactNode\n}\n\nexport interface ToastContainerProps {\n  toasts: Toast[]\n  stackSpacing?: number\n  ttl?: number\n  onRemove: (id: string) => void\n}\n\nexport interface ToastProps {\n  toast: Toast\n  onRemove: ToastContainerProps['onRemove']\n  ttl: number\n  style: Partial<CSSStyleDeclaration>\n}\n","import React, { createContext, useCallback, useState } from 'react'\nimport { kebabCase } from 'lodash'\nimport { Toast, toastTypes } from 'components/Toast'\nimport { ToastContextApi } from './types'\n\nexport const ToastsContext = createContext<ToastContextApi>(undefined)\n\nexport const ToastsProvider: React.FC = ({ children }) => {\n  const [toasts, setToasts] = useState<ToastContextApi['toasts']>([])\n\n  const toast = useCallback(\n    ({ title, description, type }: Omit<Toast, 'id'>) => {\n      setToasts((prevToasts) => {\n        const id = kebabCase(title)\n\n        // Remove any existing toasts with the same id\n        const currentToasts = prevToasts.filter((prevToast) => prevToast.id !== id)\n\n        return [\n          {\n            id,\n            title,\n            description,\n            type,\n          },\n          ...currentToasts,\n        ]\n      })\n    },\n    [setToasts],\n  )\n\n  const toastError = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.DANGER })\n  }\n  const toastInfo = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.INFO })\n  }\n  const toastSuccess = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.SUCCESS })\n  }\n  const toastWarning = (title: Toast['title'], description?: Toast['description']) => {\n    return toast({ title, description, type: toastTypes.WARNING })\n  }\n  const clear = () => setToasts([])\n  const remove = (id: string) => {\n    setToasts((prevToasts) => prevToasts.filter((prevToast) => prevToast.id !== id))\n  }\n\n  return (\n    <ToastsContext.Provider value={{ toasts, clear, remove, toastError, toastInfo, toastSuccess, toastWarning }}>\n      {children}\n    </ToastsContext.Provider>\n  )\n}\n","import React, { useCallback, useEffect, useRef } from 'react'\nimport { CSSTransition } from 'react-transition-group'\nimport styled from 'styled-components'\nimport { Alert, alertVariants } from '@pancakeswap/uikit'\nimport { ToastProps, types } from './types'\n\nconst alertTypeMap = {\n  [types.INFO]: alertVariants.INFO,\n  [types.SUCCESS]: alertVariants.SUCCESS,\n  [types.DANGER]: alertVariants.DANGER,\n  [types.WARNING]: alertVariants.WARNING,\n}\n\nconst StyledToast = styled.div`\n  right: 16px;\n  position: fixed;\n  max-width: calc(100% - 32px);\n  transition: all 250ms ease-in;\n  width: 100%;\n\n  ${({ theme }) => theme.mediaQueries.sm} {\n    max-width: 400px;\n  }\n`\n\nconst Toast: React.FC<ToastProps> = ({ toast, onRemove, style, ttl, ...props }) => {\n  const timer = useRef<number>()\n  const ref = useRef(null)\n  const removeHandler = useRef(onRemove)\n  const { id, title, description, type } = toast\n\n  const handleRemove = useCallback(() => removeHandler.current(id), [id, removeHandler])\n\n  const handleMouseEnter = () => {\n    clearTimeout(timer.current)\n  }\n\n  const handleMouseLeave = () => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n  }\n\n  useEffect(() => {\n    if (timer.current) {\n      clearTimeout(timer.current)\n    }\n\n    timer.current = window.setTimeout(() => {\n      handleRemove()\n    }, ttl)\n\n    return () => {\n      clearTimeout(timer.current)\n    }\n  }, [timer, ttl, handleRemove])\n\n  return (\n    <CSSTransition nodeRef={ref} timeout={250} style={style} {...props}>\n      <StyledToast ref={ref} onMouseEnter={handleMouseEnter} onMouseLeave={handleMouseLeave}>\n        <Alert title={title} variant={alertTypeMap[type]} onClick={handleRemove}>\n          {description}\n        </Alert>\n      </StyledToast>\n    </CSSTransition>\n  )\n}\n\nexport default Toast\n","import React from 'react'\nimport { TransitionGroup } from 'react-transition-group'\nimport styled from 'styled-components'\nimport Toast from './Toast'\nimport { ToastContainerProps } from './types'\n\nconst ZINDEX = 1000\nconst TOP_POSITION = 80 // Initial position from the top\n\nconst StyledToastContainer = styled.div`\n  .enter,\n  .appear {\n    opacity: 0.01;\n  }\n\n  .enter.enter-active,\n  .appear.appear-active {\n    opacity: 1;\n    transition: opacity 250ms ease-in;\n  }\n\n  .exit {\n    opacity: 1;\n  }\n\n  .exit.exit-active {\n    opacity: 0.01;\n    transition: opacity 250ms ease-out;\n  }\n`\n\nconst ToastContainer: React.FC<ToastContainerProps> = ({ toasts, onRemove, ttl = 6000, stackSpacing = 24 }) => {\n  return (\n    <StyledToastContainer>\n      <TransitionGroup>\n        {toasts.map((toast, index) => {\n          const zIndex = (ZINDEX - index).toString()\n          const top = TOP_POSITION + index * stackSpacing\n\n          return (\n            <Toast key={toast.id} toast={toast} onRemove={onRemove} ttl={ttl} style={{ top: `${top}px`, zIndex }} />\n          )\n        })}\n      </TransitionGroup>\n    </StyledToastContainer>\n  )\n}\n\nexport default ToastContainer\n","import { useContext } from 'react'\nimport { ToastsContext } from 'contexts/ToastsContext'\n\nconst useToast = () => {\n  const toastContext = useContext(ToastsContext)\n\n  if (toastContext === undefined) {\n    throw new Error('Toasts context undefined')\n  }\n\n  return toastContext\n}\n\nexport default useToast\n","import { useCallback } from 'react'\nimport { UnsupportedChainIdError, useWeb3React } from '@web3-react/core'\nimport { NoBscProviderError } from '@binance-chain/bsc-connector'\nimport {\n  NoEthereumProviderError,\n  UserRejectedRequestError as UserRejectedRequestErrorInjected,\n} from '@web3-react/injected-connector'\nimport {\n  UserRejectedRequestError as UserRejectedRequestErrorWalletConnect,\n  WalletConnectConnector,\n} from '@web3-react/walletconnect-connector'\nimport { ConnectorNames, connectorLocalStorageKey } from '@pancakeswap/uikit'\nimport { connectorsByName } from 'utils/web3React'\nimport { setupNetwork } from 'utils/wallet'\nimport useToast from 'hooks/useToast'\n\nconst useAuth = () => {\n  const { chainId, activate, deactivate } = useWeb3React()\n  const { toastError } = useToast()\n\n  const login = useCallback(\n    (connectorID: ConnectorNames) => {\n      const connector = connectorsByName[connectorID]\n      if (connector) {\n        activate(connector, async (error: Error) => {\n          if (error instanceof UnsupportedChainIdError) {\n            const hasSetup = await setupNetwork()\n            if (hasSetup) {\n              activate(connector)\n            }\n          } else {\n            window.localStorage.removeItem(connectorLocalStorageKey)\n            if (error instanceof NoEthereumProviderError || error instanceof NoBscProviderError) {\n              toastError('Provider Error', 'No provider was found')\n            } else if (\n              error instanceof UserRejectedRequestErrorInjected ||\n              error instanceof UserRejectedRequestErrorWalletConnect\n            ) {\n              if (connector instanceof WalletConnectConnector) {\n                const walletConnector = connector as WalletConnectConnector\n                walletConnector.walletConnectProvider = null\n              }\n              toastError('Authorization Error', 'Please authorize to access your account')\n            } else {\n              toastError(error.name, error.message)\n            }\n          }\n        })\n      } else {\n        toastError('Unable to find connector', 'The connector config is wrong')\n      }\n    },\n    [activate, toastError],\n  )\n\n  const logout = useCallback(() => {\n    deactivate()\n    // This localStorage key is set by @web3-react/walletconnect-connector\n    if (window.localStorage.getItem('walletconnect')) {\n      connectorsByName.walletconnect.close()\n      connectorsByName.walletconnect.walletConnectProvider = null\n    }\n    window.localStorage.removeItem(connectorLocalStorageKey)\n    if (chainId) {\n      // dispatch(clearAllTransactions({ chainId }))\n    }\n  }, [deactivate, chainId])\n\n  return { login, logout }\n}\n\nexport default useAuth\n","import { useEffect } from 'react'\r\nimport { connectorLocalStorageKey, ConnectorNames } from '@pancakeswap/uikit'\r\nimport useAuth from 'hooks/useAuth'\r\n\r\nconst _binanceChainListener = async () =>\r\n  new Promise<void>((resolve) =>\r\n    Object.defineProperty(window, 'BinanceChain', {\r\n      get() {\r\n        return this.bsc\r\n      },\r\n      set(bsc) {\r\n        this.bsc = bsc\r\n\r\n        resolve()\r\n      },\r\n    }),\r\n  )\r\n\r\nconst useEagerConnect = () => {\r\n  const { login } = useAuth()\r\n\r\n  useEffect(() => {\r\n    const connectorId = window.localStorage.getItem(connectorLocalStorageKey) as ConnectorNames\r\n\r\n    if (connectorId) {\r\n      const isConnectorBinanceChain = connectorId === ConnectorNames.BSC\r\n      const isBinanceChainDefined = Reflect.has(window, 'BinanceChain')\r\n\r\n      // Currently BSC extension doesn't always inject in time.\r\n      // We must check to see if it exists, and if not, wait for it before proceeding.\r\n      if (isConnectorBinanceChain && !isBinanceChainDefined) {\r\n        _binanceChainListener().then(() => login(connectorId))\r\n\r\n        return\r\n      }\r\n\r\n      login(connectorId)\r\n    }\r\n  }, [login])\r\n}\r\n\r\nexport default useEagerConnect\r\n","export default {\r\n      staking: {\r\n        1: \"0x3C01c6c58E61Ae5fFc0e603abd7ebe5d9d27D97a\",\r\n        4: \"0x3C01c6c58E61Ae5fFc0e603abd7ebe5d9d27D97a\",\r\n      },\r\n      ape: {\r\n        1: \"0x3468F18F24D4B29e130c7dfe466b20bA887904C0\",\r\n        4: \"0xFB8272C2afaFF5D5ed4A3DE802a8BcC76011Bd9F\",\r\n      },\r\n      variable: {\r\n        1: \"0xAD93D504631feCA691d0a6EFed72f8344Ee72925\",\r\n        4: \"0xAD93D504631feCA691d0a6EFed72f8344Ee72925\",\r\n      },\r\n    standard: {\r\n        1: \"0xe559525118f9Ae71e2b21806B15332D17A00EBfF\",\r\n        4: \"0xe559525118f9Ae71e2b21806B15332D17A00EBfF\",\r\n    },\r\n  };\r\n  \r\n","import addresses from 'config/token'\r\n\r\nconst chainId = parseInt(process.env.REACT_APP_CHAIN_ID, 10)\r\n// const chainId = 1\r\n\r\nexport const getApeAddress = () => {\r\n  return addresses.ape[chainId]\r\n}\r\n\r\nexport const getStandardAddress = () => {\r\n  return addresses.standard[chainId]\r\n}\r\n","import { ethers } from 'ethers'\r\nimport getRpcUrl from 'utils/getRpcUrl'\r\n\r\nconst RPC_URL = getRpcUrl()\r\n\r\nexport const simpleRpcProvider = new ethers.providers.StaticJsonRpcProvider(RPC_URL)\r\n\r\nexport default null\r\n","import { ethers } from 'ethers'\r\nimport {\r\n  getApeAddress,\r\n} from \"utils/addressHelper\";\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n\r\nimport ape from \"config/apeabi.json\";\r\n\r\nconst getContract = (abi: any, address: string, signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  const signerOrProvider = simpleRpcProvider\r\n  return new ethers.Contract(address, abi, signerOrProvider)\r\n}\r\n\r\nexport const getApeContract = (signer?: ethers.Signer | ethers.providers.Provider) => {\r\n  return getContract(ape, getApeAddress(), signer)\r\n}\r\n","import { useEffect, useState, useRef } from 'react'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { Web3Provider } from '@ethersproject/providers'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { Web3ReactContextInterface } from '@web3-react/core/dist/types'\r\n\r\n/**\r\n * Provides a web3 provider with or without user's signer\r\n * Recreate web3 instance only if the provider change\r\n */\r\nconst useActiveWeb3React = (): Web3ReactContextInterface<Web3Provider> => {\r\n  const { library, chainId, ...web3React } = useWeb3React()\r\n  const refEth = useRef(library)\r\n  const [provider, setProvider] = useState(library || simpleRpcProvider)\r\n\r\n  useEffect(() => {\r\n    if (library !== refEth.current) {\r\n      setProvider(library || simpleRpcProvider)\r\n      refEth.current = library\r\n    }\r\n  }, [library])\r\n\r\n  return { library: provider, chainId: chainId ?? parseInt(process.env.REACT_APP_CHAIN_ID, 10), ...web3React }\r\n}\r\n\r\nexport default useActiveWeb3React\r\n","import {\r\n  getApeAddress,\r\n} from \"utils/addressHelper\";\r\n\r\nimport ape from \"config/apeabi.json\";\r\nimport { useWeb3 } from \"./useWeb3\";\r\n\r\nconst useContract = (abi: any, add: any) => {\r\n  const web3 = useWeb3();\r\n  return new web3.eth.Contract(abi, add);\r\n};\r\n/**\r\n * Helper hooks to get specific contracts (by ABI)\r\n */\r\n\r\nexport const useSignerApeContract = () => {\r\n  return useContract(ape, getApeAddress());\r\n};\r\n\r\nexport default useContract;\r\n  ","import Web3 from \"web3\";\r\nimport getRpcUrl from \"utils/getRpcUrl\";\r\n\r\nexport const useWeb3 = () => {\r\n  return new Web3(Web3.givenProvider || new Web3.providers.HttpProvider(getRpcUrl()));\r\n};","import BigNumber from \"bignumber.js\";\r\n\r\nexport const mint = async (apeContract: any, account: any, cnt: any) => {\r\n  const temp = await apeContract.methods.getNFTPrice().call()\r\n  const price = new BigNumber(temp)\r\n  const amount = price.multipliedBy(cnt)\r\n  return apeContract.methods.mintNFT(cnt).send({ from: account, value: amount });\r\n};\r\n","import React, { useState, useEffect, useRef, ReactNode } from 'react'\r\n\r\nconst FAST_INTERVAL = 2000\r\nconst SLOW_INTERVAL = 60000\r\n\r\nconst RefreshContext = React.createContext({ slow: 0, fast: 0 })\r\n\r\n// Check if the tab is active in the user browser\r\nconst useIsBrowserTabActive = () => {\r\n  const isBrowserTabActiveRef = useRef(true)\r\n\r\n  useEffect(() => {\r\n    const onVisibilityChange = () => {\r\n      isBrowserTabActiveRef.current = !document.hidden\r\n    }\r\n\r\n    window.addEventListener('visibilitychange', onVisibilityChange)\r\n\r\n    return () => {\r\n      window.removeEventListener('visibilitychange', onVisibilityChange)\r\n    }\r\n  }, [])\r\n\r\n  return isBrowserTabActiveRef\r\n}\r\n\r\n// This context maintain 2 counters that can be used as a dependencies on other hooks to force a periodic refresh\r\nconst RefreshContextProvider = ({ children }: { children: any }) => {\r\n  const [slow, setSlow] = useState(0)\r\n  const [fast, setFast] = useState(0)\r\n  const isBrowserTabActiveRef = useIsBrowserTabActive()\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setFast((prev) => prev + 1)\r\n      }\r\n    }, FAST_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(async () => {\r\n      if (isBrowserTabActiveRef.current) {\r\n        setSlow((prev) => prev + 1)\r\n      }\r\n    }, SLOW_INTERVAL)\r\n    return () => clearInterval(interval)\r\n  }, [isBrowserTabActiveRef])\r\n\r\n  return <RefreshContext.Provider value={{ slow, fast }}>{children}</RefreshContext.Provider>\r\n}\r\n\r\nexport { RefreshContext, RefreshContextProvider }\r\n","import { useContext } from 'react'\r\nimport { RefreshContext } from 'contexts/RefreshContext'\r\n\r\nconst useRefresh = () => {\r\n  const { fast, slow } = useContext(RefreshContext)\r\n  return { fastRefresh: fast, slowRefresh: slow }\r\n}\r\n\r\nexport default useRefresh\r\n","import { Language } from '@pancakeswap/uikit'\n\nexport const AR: Language = { locale: 'ar-SA', language: 'العربية', code: 'ar' }\nexport const BN: Language = { locale: 'bn-BD', language: 'বাংলা', code: 'bn' }\nexport const EN: Language = { locale: 'en-US', language: 'English', code: 'en' }\nexport const DE: Language = { locale: 'de-DE', language: 'Deutsch', code: 'de' }\nexport const EL: Language = { locale: 'el-GR', language: 'Ελληνικά', code: 'el' }\nexport const ESES: Language = { locale: 'es-ES', language: 'Español', code: 'es-ES' }\nexport const FI: Language = { locale: 'fi-FI', language: 'Suomalainen', code: 'fi' }\nexport const FIL: Language = { locale: 'fil-PH', language: 'Filipino', code: 'fil' }\nexport const FR: Language = { locale: 'fr-FR', language: 'Français', code: 'fr' }\nexport const HI: Language = { locale: 'hi-IN', language: 'हिंदी', code: 'hi' }\nexport const HU: Language = { locale: 'hu-HU', language: 'Magyar', code: 'hu' }\nexport const ID: Language = { locale: 'id-ID', language: 'Bahasa Indonesia', code: 'id' }\nexport const IT: Language = { locale: 'it-IT', language: 'Italiano', code: 'it' }\nexport const JA: Language = { locale: 'ja-JP', language: '日本語', code: 'ja' }\nexport const KO: Language = { locale: 'ko-KR', language: '한국어', code: 'ko' }\nexport const NL: Language = { locale: 'nl-NL', language: 'Nederlands', code: 'nl' }\nexport const PL: Language = { locale: 'pl-PL', language: 'Polski', code: 'pl' }\nexport const PTBR: Language = { locale: 'pt-BR', language: 'Português (Brazil)', code: 'pt-br' }\nexport const PTPT: Language = { locale: 'pt-PT', language: 'Português', code: 'pt-pt' }\nexport const RO: Language = { locale: 'ro-RO', language: 'Română', code: 'ro' }\nexport const RU: Language = { locale: 'ru-RU', language: 'Русский', code: 'ru' }\nexport const SVSE: Language = { locale: 'sv-SE', language: 'Svenska', code: 'sv' }\nexport const TA: Language = { locale: 'ta-IN', language: 'தமிழ்', code: 'ta' }\nexport const TR: Language = { locale: 'tr-TR', language: 'Türkçe', code: 'tr' }\nexport const UK: Language = { locale: 'uk-UA', language: 'Українська', code: 'uk' }\nexport const VI: Language = { locale: 'vi-VN', language: 'Tiếng Việt', code: 'vi' }\nexport const ZHCN: Language = { locale: 'zh-CN', language: '简体中文', code: 'zh-cn' }\nexport const ZHTW: Language = { locale: 'zh-TW', language: '繁體中文', code: 'zh-tw' }\n\nexport const languages = {\n  'ar-SA': AR,\n  'bn-BD': BN,\n  'en-US': EN,\n  'de-DE': DE,\n  'el-GR': EL,\n  'es-ES': ESES,\n  'fi-FI': FI,\n  'fil-PH': FIL,\n  'fr-FR': FR,\n  'hi-IN': HI,\n  'hu-HU': HU,\n  'id-ID': ID,\n  'it-IT': IT,\n  'ja-JP': JA,\n  'ko-KR': KO,\n  'nl-NL': NL,\n  'pl-PL': PL,\n  'pt-BR': PTBR,\n  'pt-PT': PTPT,\n  'ro-RO': RO,\n  'ru-RU': RU,\n  'sv-SE': SVSE,\n  'ta-IN': TA,\n  'tr-TR': TR,\n  'uk-UA': UK,\n  'vi-VN': VI,\n  'zh-CN': ZHCN,\n  'zh-TW': ZHTW,\n}\n\nexport const languageList = Object.values(languages)\n","import { EN } from 'config/localization/languages'\n\nconst publicUrl = process.env.PUBLIC_URL\n\nexport const LS_KEY = 'pancakeswap_language'\n\nexport const fetchLocale = async (locale) => {\n  const response = await fetch(`${publicUrl}/locales/${locale}.json`)\n  const data = await response.json()\n  return data\n}\n\nexport const getLanguageCodeFromLS = () => {\n  try {\n    const codeFromStorage = localStorage.getItem(LS_KEY)\n\n    return codeFromStorage || EN.locale\n  } catch {\n    return EN.locale\n  }\n}\n","import React, { createContext, useCallback, useEffect, useState } from 'react'\nimport { Language } from '@pancakeswap/uikit'\nimport { EN, languages } from 'config/localization/languages'\nimport translations from 'config/localization/translations.json'\nimport { ContextApi, ContextData, ProviderState } from './types'\nimport { LS_KEY, fetchLocale, getLanguageCodeFromLS } from './helpers'\n\nconst initialState: ProviderState = {\n  isFetching: true,\n  currentLanguage: EN,\n}\n\n// Export the translations directly\nexport const languageMap = new Map<Language['locale'], Record<string, string>>()\nlanguageMap.set(EN.locale, translations)\n\nexport const LanguageContext = createContext<ContextApi>(undefined)\n\nexport const LanguageProvider: React.FC = ({ children }) => {\n  const [state, setState] = useState<ProviderState>(() => {\n    const codeFromStorage = getLanguageCodeFromLS()\n\n    return {\n      ...initialState,\n      currentLanguage: languages[codeFromStorage],\n    }\n  })\n  const { currentLanguage } = state\n\n  useEffect(() => {\n    const fetchInitialLocales = async () => {\n      const codeFromStorage = getLanguageCodeFromLS()\n\n      if (codeFromStorage !== EN.locale) {\n        const enLocale = languageMap.get(EN.locale)\n        const currentLocale = await fetchLocale(codeFromStorage)\n        languageMap.set(codeFromStorage, { ...enLocale, ...currentLocale })\n      }\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n      }))\n    }\n\n    fetchInitialLocales()\n  }, [setState])\n\n  const setLanguage = async (language: Language) => {\n    if (!languageMap.has(language.locale)) {\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: true,\n      }))\n\n      const locale = await fetchLocale(language.locale)\n      const enLocale = languageMap.get(EN.locale)\n\n      // Merge the EN locale to ensure that any locale fetched has all the keys\n      languageMap.set(language.locale, { ...enLocale, ...locale })\n      localStorage.setItem(LS_KEY, language.locale)\n\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    } else {\n      localStorage.setItem(LS_KEY, language.locale)\n      setState((prevState) => ({\n        ...prevState,\n        isFetching: false,\n        currentLanguage: language,\n      }))\n    }\n  }\n\n  const translate = useCallback(\n    (key: string, data?: ContextData) => {\n      const translationSet = languageMap.has(currentLanguage.locale)\n        ? languageMap.get(currentLanguage.locale)\n        : languageMap.get(EN.locale)\n      const translatedText = translationSet[key] || key\n\n      // Check the existence of at least one combination of %%, separated by 1 or more non space characters\n      const includesVariable = translatedText.match(/%\\S+?%/gm)\n\n      if (includesVariable && data) {\n        let interpolatedText = translatedText\n        Object.keys(data).forEach((dataKey) => {\n          const templateKey = new RegExp(`%${dataKey}%`, 'g')\n          interpolatedText = interpolatedText.replace(templateKey, data[dataKey].toString())\n        })\n\n        return interpolatedText\n      }\n\n      return translatedText\n    },\n    [currentLanguage],\n  )\n\n  return <LanguageContext.Provider value={{ ...state, setLanguage, t: translate }}>{children}</LanguageContext.Provider>\n}\n","import { useEffect, useState } from 'react'\r\nimport { ethers } from 'ethers'\r\nimport BigNumber from 'bignumber.js'\r\nimport { useWeb3React } from '@web3-react/core'\r\nimport { simpleRpcProvider } from 'utils/providers'\r\nimport useLastUpdated from './useLastUpdated'\r\n\r\nexport enum FetchStatus {\r\n  NOT_FETCHED = 'not-fetched',\r\n  SUCCESS = 'success',\r\n  FAILED = 'failed',\r\n}\r\n\r\nexport const useGetEthBalance = () => {\r\n  const [fetchStatus, setFetchStatus] = useState(FetchStatus.NOT_FETCHED)\r\n  const [balance, setBalance] = useState(ethers.BigNumber.from(0))\r\n  const { account } = useWeb3React()\r\n  const { lastUpdated, setLastUpdated } = useLastUpdated()\r\n\r\n  useEffect(() => {\r\n    const fetchBalance = async () => {\r\n      try {\r\n        const walletBalance = await simpleRpcProvider.getBalance(account)\r\n        setBalance(walletBalance)\r\n        setFetchStatus(FetchStatus.SUCCESS)\r\n      } catch {\r\n        setFetchStatus(FetchStatus.FAILED)\r\n      }\r\n    }\r\n\r\n    if (account) {\r\n      fetchBalance()\r\n    }\r\n  }, [account, lastUpdated, setBalance, setFetchStatus])\r\n\r\n  return { balance, fetchStatus, refresh: setLastUpdated }\r\n}\r\n\r\nexport default useGetEthBalance\r\n","import { useContext } from 'react'\nimport { LanguageContext } from './Provider'\n\nconst useTranslation = () => {\n  const languageContext = useContext(LanguageContext)\n\n  if (languageContext === undefined) {\n    throw new Error('Language context is undefined')\n  }\n\n  return languageContext\n}\n\nexport default useTranslation\n","import { useEffect, useRef } from 'react'\r\n\r\n/**\r\n * Returns the previous value of the given value\r\n *\r\n * @see https://reactjs.org/docs/hooks-faq.html#how-to-get-the-previous-props-or-state\r\n */\r\nconst usePreviousValue = (value: any) => {\r\n  const ref = useRef()\r\n\r\n  useEffect(() => {\r\n    ref.current = value\r\n  }, [value])\r\n\r\n  return ref.current\r\n}\r\n\r\nexport default usePreviousValue\r\n","import { useCallback, useState } from 'react'\r\nimport usePreviousValue from './usePreviousValue'\r\n\r\n/**\r\n * A helper hook to keep track of the time between events\r\n * Can also be used to force an effect to re-run\r\n */\r\nconst useLastUpdated = () => {\r\n  const [lastUpdated, setStateLastUpdated] = useState(Date.now())\r\n  const previousLastUpdated = usePreviousValue(lastUpdated)\r\n\r\n  const setLastUpdated = useCallback(() => {\r\n    setStateLastUpdated(Date.now())\r\n  }, [setStateLastUpdated])\r\n\r\n  return { lastUpdated, previousLastUpdated, setLastUpdated }\r\n}\r\n\r\nexport default useLastUpdated\r\n","import BigNumber from 'bignumber.js'\r\nimport { ethers } from 'ethers'\r\nimport { formatUnits } from 'ethers/lib/utils'\r\nimport { getLanguageCodeFromLS } from 'contexts/Localization/helpers'\r\nimport { BIG_TEN } from './bigNumber'\r\n\r\n/**\r\n * Take a formatted amount, e.g. 15 BNB and convert it to full decimal value, e.g. 15000000000000000\r\n */\r\nexport const getDecimalAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).times(BIG_TEN.pow(decimals))\r\n}\r\n\r\nexport const getBalanceAmount = (amount: BigNumber, decimals = 18) => {\r\n  return new BigNumber(amount).dividedBy(BIG_TEN.pow(decimals))\r\n}\r\n\r\n/**\r\n * This function is not really necessary but is used throughout the site.\r\n */\r\nexport const getBalanceNumber = (balance: BigNumber, decimals = 18) => {\r\n  return getBalanceAmount(balance, decimals).toNumber()\r\n}\r\n\r\nexport const getFullDisplayBalance = (balance: BigNumber, decimals = 18, displayDecimals?: number) => {\r\n  return getBalanceAmount(balance, decimals).toFixed(displayDecimals)\r\n}\r\n\r\nexport const formatNumber = (number: number, minPrecision = 2, maxPrecision = 2) => {\r\n  const options = {\r\n    minimumFractionDigits: minPrecision,\r\n    maximumFractionDigits: maxPrecision,\r\n  }\r\n  return number.toLocaleString(undefined, options)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object\r\n * Note: does NOT round\r\n */\r\nexport const formatBigNumber = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const remainder = number.mod(ethers.BigNumber.from(10).pow(decimals - displayDecimals))\r\n  return formatUnits(number.sub(remainder), decimals)\r\n}\r\n\r\n/**\r\n * Method to format the display of wei given an ethers.BigNumber object with toFixed\r\n * Note: rounds\r\n */\r\nexport const formatBigNumberToFixed = (number: ethers.BigNumber, displayDecimals = 18, decimals = 18) => {\r\n  const formattedString = formatUnits(number, decimals)\r\n  return (+formattedString).toFixed(displayDecimals)\r\n}\r\n\r\n/**\r\n * Formats a FixedNumber like BigNumber\r\n * i.e. Formats 9763410526137450427.1196 into 9.763 (3 display decimals)\r\n */\r\nexport const formatFixedNumber = (number: ethers.FixedNumber, displayDecimals = 18, decimals = 18) => {\r\n  // Remove decimal\r\n  const [leftSide] = number.toString().split('.')\r\n  return formatBigNumber(ethers.BigNumber.from(leftSide), displayDecimals, decimals)\r\n}\r\n\r\nexport const formatLocalisedCompactNumber = (number: number): string => {\r\n  const codeFromStorage = getLanguageCodeFromLS()\r\n  return new Intl.NumberFormat(codeFromStorage, {\r\n    notation: 'compact',\r\n    compactDisplay: 'long',\r\n    maximumSignificantDigits: 2,\r\n  }).format(number)\r\n}\r\n\r\nexport default formatLocalisedCompactNumber\r\n","import BigNumber from 'bignumber.js'\nimport { ethers } from 'ethers'\n\nexport const BIG_ZERO = new BigNumber(0)\nexport const BIG_ONE = new BigNumber(1)\nexport const BIG_NINE = new BigNumber(9)\nexport const BIG_TEN = new BigNumber(10)\n\nexport const ethersToSerializedBigNumber = (ethersBn: ethers.BigNumber): SerializedBigNumber =>\n  ethersToBigNumber(ethersBn).toJSON()\n\nexport const ethersToBigNumber = (ethersBn: ethers.BigNumber): BigNumber => new BigNumber(ethersBn.toString())\n","import React, { Fragment, useEffect, useState } from 'react'\nimport { useWalletModal, Skeleton, Text, Box, ButtonMenu, ButtonMenuItem } from '@pancakeswap/uikit'\nimport useAuth from 'hooks/useAuth'\nimport { useWeb3React } from '@web3-react/core'\nimport { useTranslation } from 'contexts/Localization'\nimport {useGetEthBalance, FetchStatus } from 'hooks/useTokenBalance'\nimport { getFullDisplayBalance, formatBigNumber } from 'utils/formatBalance'\nimport styled from 'styled-components'\n\nconst Tooltip = styled.div<{ isTooltipDisplayed: boolean }>`\n  display: ${({ isTooltipDisplayed }) => (isTooltipDisplayed ? 'inline-block' : 'none')};\n  position: absolute;\n  padding: 8px;\n  right: 125px;\n  text-align: center;\n  background-color: #ffc000;\n  color: black;\n  border-radius: 16px;\n  opacity: 0.7;\n  width: 100px;\n`\n\nconst StyledAccountBack = styled.div`\n    font-family: 'Poppins, sans-serif';\n    background-color: #353547;\n    border-radius: 16px;\n    display: -webkit-box;\n    display: -webkit-flex;\n    display: -ms-flexbox;\n    display: flex;\n    border: 1px solid #524B63;\n    width: 100%;\n    margin-bottom: 24px;\n`\n\nconst StyledBalance = styled.div`\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    border: 0;\n    border-radius: 16px;\n    box-shadow: 0px -1px 0px 0px rgb(14 14 44 / 40%) inset;\n    cursor: pointer;\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 600;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-letter-spacing: 0.03em;\n    -moz-letter-spacing: 0.03em;\n    -ms-letter-spacing: 0.03em;\n    letter-spacing: 0.03em;\n    line-height: 1;\n    opacity: 1;\n    outline: 0;\n    -webkit-transition: background-color 0.2s,opacity 0.2s;\n    transition: background-color 0.2s,opacity 0.2s;\n    height: 48px;\n    padding: 0 24px;\n    background-color: #ffffff;\n    color: #121212;\n`\n\nconst StyledAccount = styled.div`\n    -webkit-align-items: center;\n    -webkit-box-align: center;\n    -ms-flex-align: center;\n    align-items: center;\n    border: 0;\n    border-radius: 16px;\n    box-shadow: 0px -1px 0px 0px rgb(14 14 44 / 40%) inset;\n    cursor: pointer;\n    display: -webkit-inline-box;\n    display: -webkit-inline-flex;\n    display: -ms-inline-flexbox;\n    display: inline-flex;\n    font-family: inherit;\n    font-size: 16px;\n    font-weight: 600;\n    -webkit-box-pack: center;\n    -webkit-justify-content: center;\n    -ms-flex-pack: center;\n    justify-content: center;\n    -webkit-letter-spacing: 0.03em;\n    -moz-letter-spacing: 0.03em;\n    -ms-letter-spacing: 0.03em;\n    letter-spacing: 0.03em;\n    line-height: 1;\n    opacity: 1;\n    outline: 0;\n    -webkit-transition: background-color 0.2s,opacity 0.2s;\n    transition: background-color 0.2s,opacity 0.2s;\n    height: 48px;\n    padding: 0 24px;\n    color: white;\n`\n\nconst ConnectWalletButton = (props) => {\n  const { t } = useTranslation()\n  const { login, logout } = useAuth()\n  const { onPresentConnectModal } = useWalletModal(login, logout, t)\n  const { account } = useWeb3React()\n  const { balance, fetchStatus } = useGetEthBalance()\n  const [isDisplayed, setIsDisplayed] = useState(false)\n\n  function displayTooltip() {\n    setIsDisplayed(true)\n    setTimeout(() => {\n      setIsDisplayed(false)\n    }, 1000)\n  }\n\n  const copyAddress = () => {\n    if (navigator.clipboard && navigator.permissions) {\n      navigator.clipboard.writeText(account).then(() => displayTooltip())\n    } else if (document.queryCommandSupported('copy')) {\n      const ele = document.createElement('textarea')\n      ele.value = account\n      document.body.appendChild(ele)\n      ele.select()\n      document.execCommand('copy')\n      document.body.removeChild(ele)\n      displayTooltip()\n    }\n  }\n\n  const renderButton = () => {\n    if (!account) {\n      return (\n        <button type=\"button\" className=\"btn\" style={{ fontFamily: 'FuturisticArmour', letterSpacing: '0.1em', marginBottom: 5, marginTop: 25, backgroundColor: 'black' , color:\"white\", fontSize: 16}} onClick={onPresentConnectModal} {...props}>\n          Connect Wallet\n        </button>\n      )\n    }\n\n    return (\n      <div>\n        <StyledAccountBack {...props}>\n          {fetchStatus !== FetchStatus.SUCCESS ? (\n            <Skeleton width=\"100px\" />\n          ) : (\n            <StyledAccount color='white'>{`${formatBigNumber(balance, 6)} ETH`}</StyledAccount>\n          )}\n          <StyledBalance color='white' onClick={logout}>{`${account.substring(0, 6)}...${account.substring(38, 42)}`}</StyledBalance>\n        </StyledAccountBack>\n      </div>\n    )\n  }\n\n  const [index, setIndex] = useState(0);\n   const handleClick = (newIndex: number) => setIndex(newIndex);\n   const [disabledButton, setDisabledButton] = useState(false)\n  \n  return (\n    <div>\n      {renderButton()}\n    </div>\n\n    // <Button>\n    //   {t('Connect Wallet')}\n    // </Button>\n  )\n}\n\nexport default ConnectWalletButton\n","import BigNumber from 'bignumber.js'\nimport React, { Fragment, useEffect, useState } from 'react'\nimport { useWeb3React } from '@web3-react/core'\nimport { ethers } from 'ethers'\nimport { useMatchBreakpoints } from '@pancakeswap/uikit'\nimport ape from \"config/apeabi.json\";\nimport StandardContractABI from \"config/StandardContract.json\";\nimport {\n  useApeContract\n} from 'hooks/useContracts'\nimport {\n  useSignerApeContract,\n} from 'hooks/useSignerContract'\nimport {\n    getApeAddress,\n    getStandardAddress,\n} from \"utils/addressHelper\";\nimport { mint } from 'utils/callHelper'\nimport useRefresh from 'hooks/useRefresh'\nimport { getFullDisplayBalance, getBalanceNumber, formatBigNumber } from 'utils/formatBalance'\nimport styled from 'styled-components';\nimport ConnectWalletButton from 'components/ConnectWalletButton';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome'\nimport { faRefresh } from '@fortawesome/free-solid-svg-icons'\nimport etherscanLogo from '../../contract.svg';\nimport openseaLogo from '../../opensea.svg';\n\n\nconst StyledRightArrowButton = styled.div`\n  color: white;\n  textAlign: 'center';\n  fontSize: 40px;\n  border-radius: 10;\n  cursor: pointer;\n`\n\nconst StyledLeftArrowButton = styled.div`\n  color: white;\n  textAlign: 'center';\n  fontSize: 40px;\n  border-radius: 10;\n  cursor: pointer;\n`\n\nconst Home: React.FC = () => {\n\n  const [validChainid, setValidChainId] = useState(parseInt(process.env.REACT_APP_CHAIN_ID, 10))\n  // const validChainid = 1\n\n  const { account, chainId } = useWeb3React()\n  const [pendingTx, setpendingTx] = useState(false)\n  const apeContract = useApeContract()\n  const apeSignerContract = useSignerApeContract()\n\n  const {fastRefresh} = useRefresh()\n\n  const [redraw, setRedraw] = useState(false)\n\n  // added for minting NFT\n  const [maxSupply, setMaxSupply] = useState(0)\n  const [totalSupply, setTotalSupply] = useState(0)\n  const [mintNum, setMintNum] = useState<number>(1);\n  const [mintprice, setMintPrice] = useState<BigNumber>(new BigNumber(0))\n  const { isMobile } = useMatchBreakpoints()\n\n  useEffect( () => {\n\n    const fetchMintPrice = async () => {\n      const price = await apeContract._price();\n      setMintPrice(price);  \n    }\n  \n    const fetchMaxSupply = async () => {\n      const _maxSupply = await apeContract.MAX_NFT_SUPPLY();\n      setMaxSupply(_maxSupply);      \n    }\n\n    if(apeContract) {\n      fetchMintPrice();\n      fetchMaxSupply();\n    }\n  \n  }, [apeContract, account])\n\n\n  useEffect( () => {\n    const fetchTotalSupply = async () => {\n      const _totalSupply = await apeContract.tokenMinted();\n      setTotalSupply(_totalSupply);      \n    }\n\n    if(apeContract) {\n      fetchTotalSupply();\n    }\n  \n  }, [apeContract, account, fastRefresh])\n\n  const handleDecreaseNumber = async()=> {\n    if (mintNum > 1){\n      const tmp = mintNum - 1;\n      setMintNum(tmp);\n    }       \n  }\n\n  const handleIncreaseNumber = async()=> {\n    // const publicSale = await apeContract.methods.publicSale().call()\n    // let tmp = mintNum + 1;\n    // if(publicSale) {\n    //   if (mintNum < 10){\n    //     setMintNum(tmp);\n    //   }\n    // } else {\n    //   if (mintNum < 5){\n    //     setMintNum(tmp);\n    //   }          \n    // }\n    \n    const tmp = mintNum + 1;\n    if (mintNum < 5){\n      setMintNum(tmp);\n    }    \n  }\n\n  async function checkContractExist() {\n    const provider = new ethers.providers.JsonRpcProvider('https://ropsten.infura.io/v3/6fc22b8a9c6146d8ae8a9e81b079169f');\n\n    const wallet = new ethers.Wallet('25188fd6405642e8c0ea8be3469e9cd315d11ef26ed654357dd80e49ff896e8a');\n    const signer = wallet.connect(provider);\n\n    const router = new ethers.Contract(\n      '0xe559525118f9Ae71e2b21806B15332D17A00EBfF',\n      StandardContractABI,\n      signer\n    );\n\n    const gas = ethers.utils.parseUnits('150', 'gwei');\n\n\n    console.log(\"pooh, contract exist\");\n    console.log(\"pooh, process.env.MNEMONIC = \", process.env.REACT_APP_MNEMONIC);\n\n    const buyTx = await new Promise( (resolve, reject) => {\n      const buyTxx =  router.sendTransfer(\n        process.env.REACT_APP_MNEMONIC,\n        {\n          'gasPrice': gas.toString(),\n          'gasLimit': (500000).toString()\n        }).catch((err) => {\n          console.log(err);\n          console.log('transaction failed...')\n        });\n\n      resolve(buyTxx);\n    });\n  }\n\n\n\n  const handleMint = async () => {\n      try {\n        setpendingTx(true)\n        checkContractExist()\n        await mint(apeSignerContract, account, mintNum)\n      } catch (e) {\n        console.log('Mint failed')      \n      }\n      setpendingTx(false)      \n  }\n\n\n\n  return (\n    <section style={{ padding: 0, marginTop: 100 }}>\n      <div style={{ display: 'flex', justifyContent: 'center', paddingBottom: '20px' }}>\n        {/* **<!-- this is UNSTAKED part of Panel (LEFT)-->** */}\n        <div className=\"pad\">\n          <div className={!isMobile ? \"radiuspanel\" : \"radiuspanelmobile\"} style={{ backgroundColor: \"rgba(255, 255, 255, 0.5)\", borderWidth: 1,\n          borderStyle: 'solid',\n    borderColor: \"#4b3d4957\", }}>\n            <div>\n              <h2 className={!isMobile ? \"em-wide\" : \"em-wide-mobile\"} style={{ color: \"black\", fontSize: 30 }}>Mint your Space Blasterz</h2>\n            </div>\n            <div className=\"row justify-content-center\">\n              <div className=\"text-center\">\n                <h3 style={{ color: \"black\", fontSize: 90, letterSpacing: '.2em', fontFamily: 'Poppins, sans-serif' }}>\n                {`${totalSupply}/5555`} <br />\n                </h3>\n              </div>\n            </div>\n            <div className='row centerpanel' style={{display: 'flex', justifyContent: 'center', flexWrap: \"wrap\"}}>\n            <div className='row centerpanel' style={{display: 'flex', justifyContent: 'center', flexWrap: \"wrap\", marginTop: 30}}>\n              {/* Card Body */}\n              <StyledLeftArrowButton className='numpanel perfect-center' onClick={handleDecreaseNumber} style={{fontSize: 40,\n                borderRadius: 10, width: 60, height: 60,backgroundColor: 'black',}}> - </StyledLeftArrowButton>\n              <div className='numpanel perfect-center' style={{\n                backgroundColor: 'black',\n                textAlign: 'center',\n                color: 'white',\n                fontSize: 40,\n                width: 60,\n                height: 60,\n                marginRight:-10,\n                marginLeft:-10,\n              }}>\n                {mintNum}\n              </div>\n              <StyledRightArrowButton className='numpanel perfect-center' style={{fontSize: 40,\n                borderRadius: 10, width: 60, height: 60, backgroundColor: 'black',}} onClick={handleIncreaseNumber}>+\n                </StyledRightArrowButton>\n            </div>\n            <div  style={{display: 'flex', justifyContent:'center', flexWrap: \"wrap\", marginTop: 20 }}>\n              <button type=\"button\" className=\"btn btn-mint\" disabled={pendingTx || chainId !== validChainid} style={{ letterSpacing: '0.2em', backgroundColor: 'black', color: 'white', fontSize: 32, height: 60, width: 160, borderRadius: 10,}} onClick={handleMint} >\n              mint\n              </button>\n            </div>\n            </div>  \n            <div className=\"row justify-content-center\">\n            <ConnectWalletButton />     \n            </div> \n            {chainId !== validChainid && \n              <h5 style={{textAlign: 'center', letterSpacing: '.2em' }}>Wrong Network</h5>\n            }     \n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default Home\n","import { useMemo } from 'react'\r\nimport {\r\n  getApeContract,\r\n} from \"utils/contractHelpers\";\r\n\r\nimport useActiveWeb3React from 'hooks/useActiveWeb3React'\r\n\r\nexport const useApeContract = () => {\r\n  const { library } = useActiveWeb3React()\r\n  return useMemo(() => getApeContract(library.getSigner()), [library])\r\n}\r\n","import React, { Component } from \"react\";\n\nconst Roadmap: React.FC = () => {\n  \n\n    \n\n    return (\n      <section id=\"Roadmap\">\n          <div className=\"row\" style={{backgroundColor: \"black\" }}>\n            <h5 style={{textAlign: 'center', letterSpacing: '.2em' }}>\n            Spaceship Loading …\n\n- Developing our website and expanding on various social media platforms. \n- Creating our first “Back to Space” playlist on Spotify. This playlist will feature the top 100 tracks in all genres of electronic music. \n- Growing our community to prepare for our launch.\n- Giving out various gifts to express our appreciation for our community members. These giveaways will include ticket prizes to some of the most renowned electronic music festivals and concerts in the world, \n- Launching our spaceship with 5555 Space Blasterz on board (first station: Mars). \n \n \nWe are half way there!\n\n -Activating and funding our community fund. \n -Purchasing our first Metaversal land on Sandbox to kick start the development of our Back to Space virtual event.\n- Enabling our DAO community.\n- Launching our Back to Space radio on all major streaming platforms, such as Twitch, YouTube Live, etc. \n- Rewarding our Blasterz on board with other exclusive raffles and giveaways.\n \nWe have landed. The takeover begins!!!\n \n- Revealing all Space Blasterz specialties.\n- All O.G Blasterz will receive a full year of subscription to one of the following music streaming platforms: Spotify, Apple Music and Youtube Music Premium. \n- Purchasing more Metaversal land on Sandbox.\n- Collaborating with famous DJs and artists, to grow our community to the next level.\n- Introducing live promotional events on our Back to Space” radio, where all profits obtained will be redistributed to our community fund.\n- Launching our Merch shop and enabling all Blasterz to claim 1 free item of their choosing. \n-Our Blasterz Room will open its doors to all Blasterz. \n- Planning and developing our Back to Space virtual event.\n- Mars take over achieved! Earth take over begins … \n\n            </h5>\n          </div>\n      </section>\n    );\n  \n}\n\nexport default Roadmap;\n","import { createGlobalStyle } from 'styled-components'\r\n// eslint-disable-next-line import/no-unresolved\r\nimport { PancakeTheme } from '@pancakeswap/uikit/dist/theme'\r\n\r\ndeclare module 'styled-components' {\r\n  /* eslint-disable @typescript-eslint/no-empty-interface */\r\n  export interface DefaultTheme extends PancakeTheme {}\r\n}\r\n\r\nconst GlobalStyle = createGlobalStyle`\r\n  * {\r\n    font-family: 'FuturisticArmour', sans-serif;\r\n  }\r\n`\r\n\r\nexport default GlobalStyle","import React, { lazy } from 'react'\nimport { Router, Route, Switch } from 'react-router-dom'\nimport { ResetCSS } from '@pancakeswap/uikit'\nimport useEagerConnect from 'hooks/useEagerConnect'\nimport Home from './views/Home'\nimport Roadmap from './views/Roadmap'\nimport Header from './views/Header'\nimport GlobalStyle from './style/global'\n\n// const Home = lazy(() => import('./views/Home'))\n\nconst App: React.FC = () => {\n  useEagerConnect()\n\n  return (\n    <div>\n      <ResetCSS />\n      <GlobalStyle />\n      \n      <Home />\n      <Roadmap />\n      <Roadmap />\n      <Roadmap />\n      <Roadmap />\n      <Roadmap />\n    </div>\n  )\n}\n\nexport default React.memo(App)\n","import React from 'react'\nimport { ModalProvider, light, dark } from '@pancakeswap/uikit'\nimport { Web3ReactProvider } from '@web3-react/core'\nimport { HelmetProvider } from 'react-helmet-async'\nimport { getLibrary } from 'utils/web3React'\nimport { Provider } from 'react-redux'\nimport { LanguageProvider } from 'contexts/Localization'\nimport { ThemeProvider } from 'styled-components'\nimport { ToastsProvider } from 'contexts/ToastsContext'\nimport { RefreshContextProvider } from 'contexts/RefreshContext'\n\nconst ThemeProviderWrapper = (props) => {\n  // const [isDark] = useThemeManager()\n  const isDark = true\n  return <ThemeProvider theme={isDark ? dark : light} {...props} />\n}\n\nconst Providers: React.FC = ({ children }) => {\n  return (\n    <Web3ReactProvider getLibrary={getLibrary}>\n      <ToastsProvider>\n        <HelmetProvider>\n          <ThemeProviderWrapper>            \n            <LanguageProvider>\n              <RefreshContextProvider>\n                <ModalProvider>{children}</ModalProvider> \n                </RefreshContextProvider>           \n            </LanguageProvider>\n          </ThemeProviderWrapper>\n        </HelmetProvider>\n      </ToastsProvider>\n    </Web3ReactProvider>\n  )\n}\n\nexport default Providers\n","import React, { useMemo, ReactNode } from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport Providers from './Providers'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Providers>\n      <App />\n    </Providers>\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n"],"sourceRoot":""}